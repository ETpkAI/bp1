version: '3.9'

services:
  # PostgreSQL 数据库
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${DB_NAME:-vitallog}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  # Node.js API 服务
  server:
    build:
      context: ./server
    image: vitallog-server:latest
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-vitallog}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      DB_SSL: "false"
      JWT_SECRET: ${JWT_SECRET:-change_me}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-change_me_refresh}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY:-}
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "3001"
    command: ["node", "src/index.js"]
    working_dir: /app

  # Nginx 前端 + 反向代理
  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: vitallog-web:latest
    ports:
      - "80:80"
    depends_on:
      - server
    # 可选：通过环境变量或模板化方式为 nginx.conf 注入自定义 server_name

volumes:
  db_data:
